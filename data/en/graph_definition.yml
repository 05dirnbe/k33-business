enable    : true
topTitle   : "Not so fast!"
title     : What are Graphs in the first place?
image  :  images/graph_equation_en.png
subtitle  : >
  A mathematical graph, or **graph** for short, is a **structure representing pairwise relationships between objects**.
  A graph is made up of **nodes** (sometimes called vertices, or points) which are connected by **edges** (sometimes called arcs, or lines).
  For example, nodes can embody **people, maschines or individual steps in a process**. Edges can illustrate the **relations between nodes**. They can
  can describe **blood relations between people, data exchange between machines** or give the **interdependence of various steps in a chain of processes**.
  **The combination of nodes and the edges between them forms the graph.**

  In practical applications the term **network** is often used instead of graphs.


  Once an application or a problem is transformed to the graph model, **powerful concepts, algorithms and analysis techniques** from [Graph Theory](https://en.wikipedia.org/wiki/Graph_theory) and [Network Science](https://en.wikipedia.org/wiki/Network_science) immediately apply.
  For this reason and their wide applicability, **graphs and technologies based on graphs have become key elements of many important applications** today.
  Some well-known applications include advertising in social networks, transportation networks or data management applications.


  The following example shows how interpreting data as a graph can help us **make better sense of structured data**.
  Clearly, the better we understand the complex data we work with the easier it will be to build applications on top of it.
  In this case, we look at a simple **communication network**, i.e. people sending emails to each other.
  However, it is important to emphasize that **virtually
  everything can be seen as a graph**.


  **Finding the best way to model data as a graph and make maximum use of it in an application is a challenging yet important problem.**


tabItem   :
  - id        : graph_item
    title     : Graph
    heading   : "Graphs are useful structure"
    content   : >

      Data capturing the **exchange of emails between people** can be directly represented as the graph seen here in blue.


      We have 10 unique persons forming the **set of nodes**.
      For each pair of people that exchanged emails with each other an edge is drawn between their respective nodes.
      The sum of these edges constitutes the **set of edges**. **Nodes and edges together form a graph**, in this case a communication network.


      **Due to the graph representation interesting information is directly available:**
      The best connected communicator in the graph is **Alston** with 5 neighbors.
      **Coley** and **Langdon** stick to themselves while **Algie** has no contacts at all.


      While this is a small and simple network, it is not difficult to see how this type of graph thinking applies to large complex networks like Facebook or LinkedIn.
      **It is the graph model that enables the efficient extraction and use of information.**


    js     : graph_intro

  - id        : vertices_item
    title     : Vertices/Nodes/Points
    heading   : Nodes are abstract objects
    content   : >


      Here the **node set is highlighted in red**. Additional information is embedded in this graph drawing:
      The **size of a node reflects the total number of mails exchanged** with its direct neighbors.
      If you hover over individual nodes, the total number of mails is given.


      In this example nodes represent people. However, in general **nodes are abstract objects and can represent any entity**.
      Multiple classes of nodes commonly appear in one graph.


      In prominent graphs nodes represent **websites, devices, products, customers, messages, events, locations and the list goes on**.


    js     : vertices_intro

  - id        : edges_item
    title     : Edges/Arcs/Lines
    heading   : Edges are abstract relations
    content   : >

      Here **the edge set is highlighted in red**. Additional information is embedded in this graph drawing:
      The **thickness of an edge reflects the number of mails exchanged between the two nodes it connects**.
      If you hover over individual edges, the number of mails is given.


      In this example edges represent email exchange. However, **in general edges are abstract objects and can represent any type of relation**.
      Multiple classes of edges are commonly present in the same graphs.


      Edges may also express a **directed relation**, e.g. Merlin sends 3 mails to Alston.
      In this example, note that we only talk about mutually exchanged emails ignoring the direction, thus drawing **undirected edges** suffices.


      In prominent graphs edges represent **weblinks, connections, buying decisions, selling decisions, subscriptions, time-ordering, streets and the list goes on**.


    js     : edges_intro
